:where(.cui-layout-panel) {
	content-visibility: visible;
	display: flex;
	flex-basis: var(--panel-basis);
	flex-direction: column;
	flex-grow: 1;
	flex-shrink: 1;
	min-width: var(--panel-min-width, 0px);
	opacity: 1;
}

:where(.cui-layout-panel) {
	transition-property: transform, opacity;
	transition-timing-function: ease-in;
	transition-duration: var(--cui-transition-duration);
}

:where(.cui-layout-panel):where(
	[data-behavior="overlay"],
	[data-behavior="modal"],
) {
	overflow: hidden;
	overscroll-behavior: contain;
}

:where(
	.cui-layout-panel,
):where(
	[data-behavior="overlay"],
	[data-behavior="modal"],
) {
	align-items: center;
	background: rgba(0, 0, 0, 0.2);
	position: fixed;
	left: 0;
	top: 0;
	right: 0;
	bottom: 0;
}

:where(.cui-layout-panel[data-behavior="overlay"]) {
	background-color: var(--cui-background-color--above);
	color: var(--cui-color);
	z-index: 3;
}

:where(.cui-layout-panel[data-behavior="modal"]) {
	background: rgba(0, 0, 0, 0.2);
	z-index: 4;
}

:where(
	.cui-layout-panel[data-behavior="modal"][data-visibility="visible"]
) {
	pointer-events: all;
}

:where(
	.cui-layout-panel:not([data-behavior="modal"]),
) {
	max-width: var(--panel-max-width, 100vw);
	max-width: var(--panel-max-width, 100dvw);
}

:where(
	.cui-layout-panel:not([data-visibility="visible"]),
) {
	clip-path: inset(0 0 0 0);
	overflow: hidden;
	pointer-events: none;
}

:where(
	.cui-layout-panel,
):where(
	[data-visibility="hidden"],
	[data-visibility="will-become-hidden"],
) {
	pointer-events: none;
	opacity: 0;
}

:where(
	.cui-layout-panel,
):where(
	[data-visibility="hidden"]
) {
	content-visibility: hidden;
}

:where(
	.cui-layout-panel,
):where(
	[data-behavior="collapsible"],
	[data-behavior="static"],
):where(
	[data-visibility="hidden"],
	[data-visibility="will-become-hidden"],
) {
	flex-basis: 0px;
	max-width: 0px;
	min-width: 0px;
	width: 0px;
}
